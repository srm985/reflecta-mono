@mixin render-helpers($i, $size: '') {
    .mt#{$size}--#{$i} {
        margin-top: calc($planck-length * $i);
    }

    .mr#{$size}--#{$i} {
        margin-right: calc($planck-length * $i);
    }

    .mb#{$size}--#{$i} {
        margin-bottom: calc($planck-length * $i);
    }

    .ml#{$size}--#{$i} {
        margin-left: calc($planck-length * $i);
    }

    .mx#{$size}--#{$i} {
        margin-right: calc($planck-length * $i);
        margin-left: calc($planck-length * $i);
    }

    .my#{$size}--#{$i} {
        margin-top: calc($planck-length * $i);
        margin-bottom: calc($planck-length * $i);
    }

    .m#{$size}--#{$i} {
        margin: calc($planck-length * $i);
    }

    .pt#{$size}--#{$i} {
        padding-top: calc($planck-length * $i);
    }

    .pr#{$size}--#{$i} {
        padding-right: calc($planck-length * $i);
    }

    .pb#{$size}--#{$i} {
        padding-bottom: calc($planck-length * $i);
    }

    .pl#{$size}--#{$i} {
        padding-left: calc($planck-length * $i);
    }

    .px#{$size}--#{$i} {
        padding-right: calc($planck-length * $i);
        padding-left: calc($planck-length * $i);
    }

    .py#{$size}--#{$i} {
        padding-top: calc($planck-length * $i);
        padding-bottom: calc($planck-length * $i);
    }

    .p#{$size}--#{$i} {
        padding: calc($planck-length * $i);
    }
}

// Generate margin and padding classes.
@for $i from 0 through 15 {
    @media only screen and (width >= 0) {
        @include render-helpers($i);
    }
    @media only screen and (min-width: $breakpoint-begin-small) {
        @include render-helpers($i, '-small');
    }
    @media only screen and (min-width: $breakpoint-begin-medium) {
        @include render-helpers($i, '-medium');
    }
    @media only screen and (min-width: $breakpoint-begin-large) {
        @include render-helpers($i, '-large');
    }
    @media only screen and (min-width: $breakpoint-begin-xlarge) {
        @include render-helpers($i, '-extra-large');
    }
}

.bold {
    font-weight: bold;
}

.italic {
    font-style: italic;
}

// Generate coloring helper classes
@each $key, $value in $color-names-list {
    .background--#{$key} {
        background-color: $value;
    }
    .color--#{$key} {
        color: $value;
    }
}

// Generate font sizes helper classes
@each $key, $value in $font-sizes {
    .font--#{$key} {
        font-size: $value;
    }
}
